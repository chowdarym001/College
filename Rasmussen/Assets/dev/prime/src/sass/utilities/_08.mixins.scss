/*======
MIXINS
======*/

// At-a-glance panels, School of Nursing using
@mixin at-a-glance($c1: $color-ras-green--light, $c2: $color-ras-green--light, $c3: $color-ras-green--dark) {
    color: $c1;
    .glance-prop-card .glance-prop-svg svg {
        background-color: transparent;
    }
    .glance-prop-card-divider {
        color: $c2;
    }
    .glance-prop-rule::after {
        color: $c3;
    }
    .glance-stat:first-child .glance-stat-large {
        color: $c2;
    }
    .glance-stat:last-child .glance-stat-large {
        color: $c3;
    }
}

// background color extends
@mixin bg-extend($left: -100%, $width: 400%) {
    @at-root #{&}::before {
        background-color: inherit;
        display: block;
        content: '';
        height: 100%;
        position: absolute;
        top: 0;
        left: $left;
        width: $width;
        z-index: -1;
    }
}

// Chevron Border
@mixin bdr-ch($color, $axis) {
    border-color: $color;
    &::before, &::after {
        color: $color;
    }
    @if $axis==y {
        border-image: linear-gradient(to bottom, rgba($color, 0), $color 25%, $color 75%, rgba($color, 0)) 2 stretch;
    }
    @if $axis==x {
        border-image: linear-gradient(to right, rgba($color, 0.125), $color 25%, $color 75%, rgba($color, 0.125)) 1 stretch;
    }
}

// Chevron Border: Top Border and Bottom Border Brand Colors
@mixin bdr-ch-x($border-color: $color-ras-green--light) {
    @include bdr-ch($border-color, x);
    $schools: brand $color-ras-green--light, rsb $color-school-rsb, rsd $color-school-rsd, rse $color-school-rse, rshs $color-school-rshs--primary, rsjs $color-school-rsjs, rsn $color-school-rsn--support--light, rst $color-school-rst;
    @each $school, $border-color in $schools {
        &-#{$school} {
            @include bdr-ch($border-color, x);
        }
    }
}

// Chevron Border: Left Border and Right Border Brand Colors
@mixin bdr-ch-y($border-color: $color-ras-green--light) {
    @include bdr-ch($border-color, x);
    @include breakpoint($medium-tall) {
        @include bdr-ch($color-ras-green--light, y);
    }
    $schools: brand $color-ras-green--light, rsb $color-school-rsb, rsd $color-school-rsd, rse $color-school-rse, rshs $color-school-rshs--primary, rsjs $color-school-rsjs, rsn $color-school-rsn--support--light, rst $color-school-rst;
    @each $school, $border-color in $schools {
        &-#{$school}, &--#{$school} {
            @include bdr-ch($border-color, x);
            @include breakpoint($medium-tall) {
                @include bdr-ch($border-color, y);
            }
        }
    }
}

// Chevron Border
@mixin border-chevron($color, $axis) {
    border-color: $color;
    &::before, &::after {
        color: $color;
    }
    @if $axis==vertical {
        border-image: linear-gradient(to bottom, rgba($color, 0), $color 25%, $color 75%, rgba($color, 0)) 2 stretch;
    }
    @if $axis==horizontal {
        border-image: linear-gradient(to right, rgba($color, 0.125), $color 25%, $color 75%, rgba($color, 0.125)) 1 stretch;
    }
}

// Chevron Border: Top Border and Bottom Border Brand Colors
@mixin border-chevron--horizontal($border-color: $color-ras-green--light) {
    @include border-chevron($border-color, horizontal);
    $schools: ras $color-ras-green--light, rsb $color-school-rsb, rsd $color-school-rsd, rse $color-school-rse, rshs $color-school-rshs--primary, rsjs $color-school-rsjs, rsn $color-school-rsn--support--light, rst $color-school-rst;
    @each $school, $border-color in $schools {
        &--#{$school} {
            @include border-chevron($border-color, horizontal);
        }
    }
}

// Chevron Border: Left Border and Right Border Brand Colors
@mixin border-chevron--vertical($border-color: $color-ras-green--light) {
    @include border-chevron($border-color, horizontal);
    @include breakpoint($medium-tall) {
        @include border-chevron($color-ras-green--light, vertical);
    }
    $schools: ras $color-ras-green--light, rsb $color-school-rsb, rsd $color-school-rsd, rse $color-school-rse, rshs $color-school-rshs--primary, rsjs $color-school-rsjs, rsn $color-school-rsn--support--light, rst $color-school-rst;
    @each $school, $border-color in $schools {
        &--#{$school} {
            @include border-chevron($border-color, horizontal);
            @include breakpoint($medium-tall) {
                @include border-chevron($border-color, vertical);
            }
        }
    }
}

@mixin box-sizing($box-model: border-box) {
    box-sizing: $box-model;
    *behavior: url("../../scripts/boxsizing.htc");
    // <= IE8
}

// rounded corners
@mixin border-radius($radius) {
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
}

@mixin box-shadow($horiz: 0, $vert: 3px, $blur: 3px, $spread: 0, $color: rgba($color-black, 0.4)) {
    box-shadow: $horiz $vert $blur $spread $color;
}

// CTA BUTTONS
@mixin button {
    @extend %clearfix;
    border: 0;
    display: inline-block;
    padding: 0;
    text-decoration: none;
    z-index: 0;
    @at-root #{&}__input {
        border: 0;
        border-radius: 4px;
        cursor: pointer;
        display: block;
        overflow: hidden;
        position: relative;
        text-transform: uppercase;
        -webkit-appearance: none;
        -webkit-backface-visibility: hidden;
        -webkit-perspective: 1000;
    }
    @at-root #{&}__title {
        font-family: $font-headings--medium;
        font-size: 16px;
        letter-spacing: .375px;
        position: relative;
        text-transform: uppercase;
        z-index: +1;
    }
    &:focus, &:hover {
        border: 0;
    }
}

// primary CTA button styles
@mixin button-primary {
    @include transition(background 250ms cubic-bezier(0.84, -0.24, 0.305, 1.42));
    @at-root #{&} .button__input {
        @include ras-buttons(ras);
        padding: 7px 20px 7px 30px;
    }
    @at-root #{&} .button__icon {
        @include transform(skew(-12deg) translateX(-40px));
        background-color: $color-ras-green--dark;
        display: inline-block;
        float: left;
        height: 100%;
        margin: 0;
        padding: 0;
        position: absolute;
        top: 0;
        width: 30px;
        @at-root #{&}::after {
            @include transition(left 0.25s ease-in-out);
            background: inherit;
            content: '';
            display: block;
            height: 100%;
            left: -1200%;
            position: absolute;
            top: 0;
            width: 1200%;
            will-change: left;
            z-index: -2;
        }
    }
    @at-root #{&} .button__title {
        color: $color-white;
        line-height: 2.5;
    }
    @at-root #{&}:hover .button__icon::after {
        left: 95%;
    }
    @at-root #{&}:focus .button__icon::after {
        left: 95%;
    }
}

// secondary CTA button styles
@mixin button-secondary($bgcolor: $color-ras-gold--dark, $text-color: $color-text) {
    @extend %clearfix;
    @extend %font-headings--bold;
    background-color: $bgcolor;
    color: $text-color;
    font-size: 18px;
    line-height: 1.25;
    margin: 0;
    padding: 10px 20px;
    position: relative;
    text-align: center;
    text-transform: uppercase;
    &::after {
        display: inline-block;
        color: inherit;
        content: "\f0da";
        font-family: $font-fontawesome;
        font-size: 24px;
        line-height: 1;
        padding-left: 10px;
        position: relative;
        right: 0;
        top: 50%;
    }
    /*
      @at-root #{&} .button__input {
          background-color: $color-white;
          border: 1px solid $color-ras-green--light;
          line-height: 1;
          margin: 10px 0;
          padding: 5px 10px;
          text-transform: uppercase;
      }
      @at-root #{&} .button__title {
          @extend %cta-inline-arrow;
          color: $color-ras-green--light;
      }
      @at-root #{&}:focus {
          @at-root #{&} .button__input {
              background-color: $color-ras-green--bright;
              color: $color-white;
          }
          @at-root #{&} .button__title {
              color: $color-white;
          }
      }
      @at-root #{&}:hover {
          @at-root #{&} .button__input {
              background-color: $color-ras-green--bright;
          }
          @at-root #{&} .button__title {
              color: $color-white;
          }
      }
  */
}

@mixin button-simple {
    @extend .button;
    @extend %font-headings--regular;
    text-align: center;
    text-transform: capitalize;
    width: auto;
    &:focus, &:hover {
        border: 0;
        color: $color-text;
    }
}

@mixin button-simple--primary($bgcolor: $color-ras-gold--dark, $color: $color-text, $font-size: 18px, $padding: 16px 20px) {
    @include button-simple;
    background-color: $bgcolor;
    color: $color;
    font-size: $font-size;
    padding: $padding;
}

@mixin button-simple--secondary($bgcolor: $color-text, $color: $color-white, $font-size: 18px, $padding: 16px 20px) {
    @include button-simple;
    background-color: $bgcolor;
    color: $color;
    font-size: $font-size;
    padding: $padding;
    &:focus, &:hover {
        background-color: $color-ras-gold--dark;
    }
}

// box shadow with inset, outset
@mixin double-box-shadow($shadow-1, $shadow-2) {
    box-shadow: $shadow-1, $shadow-2;
}

@mixin cancel-all-animations {
    /*CSS transitions*/
    -o-transition-property: none !important;
    -moz-transition-property: none !important;
    -ms-transition-property: none !important;
    -webkit-transition-property: none !important;
    transition-property: none !important;
    /*CSS transforms*/
    -o-transform: none !important;
    -moz-transform: none !important;
    -ms-transform: none !important;
    -webkit-transform: none !important;
    transform: none !important;
    /*CSS animations*/
    -webkit-animation: none !important;
    -moz-animation: none !important;
    -o-animation: none !important;
    -ms-animation: none !important;
    animation: none !important;
}

// element centered on bottom of container
@mixin centered-bottom($position: absolute, $bottom: 0%, $left: 0, $right: 0, $transformX: -50%, $transformY: -50%) {
    bottom: $bottom;
    left: $left;
    position: $position;
    right: $right;
    transform: translate($transformX, $transformY);
}

// element centered on Y axis of container
@mixin centered-axis-x($position: absolute, $left: 50%, $transformX: -50%) {
    position: $position;
    left: $left;
    transform: translateX($transformX);
}

@mixin centered-axis-xy($position: absolute, $left: 50%, $top: 50%, $transformX: -50%, $transformY: -50%) {
    left: $left;
    position: $position;
    top: $top;
    transform: translate($transformX, $transformY);
}

// element centered on Y axis of container
@mixin centered-axis-y($position: absolute, $top: 50%, $transformY: -50%) {
    position: $position;
    top: $top;
    transform: translateY($transformY);
}

// element centered directly in middle of container
@mixin centered-horizontally-vertically($position: absolute, $left: 50%, $top: 50%, $transformX: -50%, $transformY: -50%) {
    left: $left;
    position: $position;
    top: $top;
    transform: translate($transformX, $transformY);
}

// element centered on Y axis of container
@mixin centered-vertically($position: absolute, $top: 50%, $transformY: -50%) {
    position: $position;
    top: $top;
    transform: translateY($transformY);
}

@mixin centerer($horizontal: true, $vertical: true) {
    position: absolute;
    @if ($horizontal and $vertical) {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    @else if ($horizontal) {
        left: 50%;
        transform: translate(-50%, 0);
    }
    @else if ($vertical) {
        top: 50%;
        transform: translate(0, -50%);
    }
}

// clearing floats
@mixin clearfix {
    *zoom: 1;
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// container
@mixin container {
    @include clearfix;
    margin: auto;
    max-width: $container-small;
    @include breakpoint($tp-huge) {
        max-width: $container-large;
        //padding: 0 20px;
    }
    @include breakpoint($tp-ridiculously-wide) {
        max-width: $container-tp-ridiculously-wide;
    }
    @include breakpoint($tp-4k) {
        max-width: $container-tp-4k;
    }
}

@mixin cross-promo {
    @extend %clearfix;
    clear: both;
    position: relative;
}

@mixin cross-promo--simple($bgcolor: $color-ras-green--dark, $color: $color-white, $padding: 20px 0, $height: 100%, $width: 100%, $left: -100%, $right: -100%) {
    @include cross-promo;
    background-color: $bgcolor;
    color: $color;
    padding: $padding;
    text-align: center;
    &::before, &::after {
        background-color: inherit;
        content: '';
        height: $height;
        display: block;
        position: absolute;
        top: 0;
        width: $width;
        z-index: 0;
    }
    @at-root #{&}::before {
        left: $left;
    }
    @at-root #{&}::after {
        right: $right;
    }
    @at-root #{&} .cross-promo__title {
        color: $color-white;
        display: inline;
        font-family: $font-headings--medium;
        font-size: 19px;
    }
}

@mixin cross-promo--complex($bgcolor: rgba($color-ras-green--light, 0.25), $color: $color-text, $container-padding: 20px 0) {
    @include cross-promo;
    background-color: $bgcolor;
    color: $color;
    @at-root #{&} .container {
        padding: $container-padding;
    }
    @at-root #{&} .cross-promo__header {
        @include breakpoint($medium-wide) {
            @include span(first 5.75 of 12);
        }
        @include breakpoint($tp-4k) {
            @include span(first 5.75 of 12);
        }
    }
    @at-root #{&} .cross-promo__title {
        font-family: $font-headings--medium;
        font-size: 24px;
        margin: 10px 0;
        @include breakpoint($medium-wide) {
            font-size: 36px;
        }
    }
    @at-root #{&} .cross-promo__text {
        @include breakpoint($medium-wide) {
            @include span(last 6 of 12);
        }
    }
}

// inline cta
//@mixin cta-inline($color: $color-gray-dark, $font-size: 18px, $letter-spacing: 1px, $text-transform: capitalize) {
@mixin cta-inline($color: $color-gray-dark, $letter-spacing: 1px, $text-transform: none) {
    @extend %cta-inline-arrow;
    @extend %font-headings--medium;
    //@include font-size($cta-inline--plain-font-sizes);
    border: 0;
    clear: both;
    color: $color;
    cursor: pointer;
    display: inline-block;
    font-family: $font-headings--medium;
    font-size: inherit;
    letter-spacing: $letter-spacing;
    line-height: 1.33;
    margin: 0;
    //max-width: 250px;
    position: relative;
    text-decoration: none;
    text-transform: $text-transform;
    vertical-align: text-top;
    @include breakpoint($small) {
        max-width: 100%;
    }
    &:focus, &:hover {
        border: 0;
    }
}

@mixin cta-inline--button($color: $color-ras-green--light, $letter-spacing: 1px, $text-transform: uppercase, $hover-bg: $color-ras-green--bright, $hover-color: $color-white) {
    @extend %clearfix;
    @extend %cta-inline-arrow;
    //@extend %cta-secondary;
    @include font-size($cta-inline--button-font-sizes);
    background-color: $color-white;
    border: 1px solid $color-ras-green--light;
    border-radius: 4px;
    clear: both;
    color: $color;
    cursor: pointer;
    display: inline-block;
    font-family: $font-headings--medium;
    letter-spacing: $letter-spacing;
    line-height: 1;
    margin: 10px 0;
    max-width: 250px;
    padding: 5px 10px;
    position: relative;
    text-decoration: none;
    text-transform: $text-transform;
    &:focus, &:hover {
        background-color: $hover-bg;
        border: 1px solid transparent;
        color: $hover-color;
    }
}

@mixin cta-inline--arrow-inactive($border-bottom: 1px solid transparent, $color: $color-ras-green--light, $text-transform: uppercase, $hover-border: 1px solid rgba($color-ras-gold--dark, 0.5), $hover-color: $color-ras-gold--dark) {
    @extend %cta-inline-arrow;
    @include font-size($cta-inline--inactive-font-sizes);
    border-bottom: $border-bottom;
    color: $color;
    display: inline-block;
    font-family: $font-headings--medium;
    margin: 10px 0;
    text-decoration: none;
    text-transform: $text-transform;
    @at-root #{&}:focus {
        border-bottom: $hover-border;
        color: $hover-color;
    }
    @at-root #{&}:hover {
        border-bottom: $hover-border;
        color: $hover-color;
    }
}

@mixin font-body($font: $font-body, $line-height: $line-height-base) {
    font-family: $font;
    font-weight: normal;
    line-height: $line-height;
}

@mixin font-headings($font: $font-headings--bold, $line-height: $line-height-base) {
    font-family: $font;
    font-weight: normal;
    line-height: $line-height;
}

// horizontal colorful stripe rule
@mixin global-nav-border($school: ras) {
    // Global Nav Border Variables
    $ras: $color-ras-green--light;
    $rsb: $color-school-rsb;
    $rsd: $color-school-rsd;
    $rse: $color-school-rse;
    $rshs: $color-school-rshs--primary;
    $rsjs: $color-school-rsjs;
    $rsn: $color-school-rsn--support--light;
    $rst: $color-school-rst;
    border-style: hidden hidden solid hidden;
    border-width: 0 0 6px 0;
    clear: both;
    margin: 0;
    @if $school==ras {
        $start: 80px;
        $end: 40px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr calc(20% + #{$start}), $rsn calc(20% + #{$start}), $rsn calc(30% + #{$start}), $rsd calc(30% + #{$start}), $rsd calc(40% + #{$start}), $rsjs calc(40% + #{$start}), $rsjs calc(50% + #{$start}), $rsb calc(50% + #{$start}), $rsb calc(60% + #{$start}), $rse calc(60% + #{$start}), $rse calc(70% + #{$start}), $rst calc(70% + #{$start}), $rst calc(80% + #{$start}), $rshs calc(80% + #{$start}), $rshs calc(90% + #{$start}), $cclr calc(90% - #{$start} + #{end}), $cclr 100%) 2 stretch;
        color: $ras;
        @include breakpoint($small-wide) {
            border-image: linear-gradient(90deg, $cclr 0%, $cclr 45%, $rsn 45%, $rsn 50%, $rsd 50%, $rsd 55%, $rsjs 55%, $rsjs 60%, $rsb 60%, $rsb 65%, $rse 65%, $rse 70%, $rst 70%, $rst 75%, $rshs 75%, $rshs 80%, $cclr 80%, $cclr 100%) 2 stretch;
        }
    }
    @if $school==rsb {
        $start: 100px;
        $end: 20px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr 50%, $rsd 50%, $rsd 55%, $rsjs 55%, $rsjs 60%, $rsn 60%, $rsn 65%, $rse 65%, $rse 70%, $rst 70%, $rst 75%, $rshs 75%, $rshs 80%, $cclr 80%, $cclr 100%) 2 stretch;
        color: $color-school-rsb-dark;
    }
    @if $school==rsd {
        $start: 100px;
        $end: 20px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr 50%, $rsd 50%, $rsd 55%, $rsjs 55%, $rsjs 60%, $rsn 60%, $rsn 65%, $rse 65%, $rse 70%, $rst 70%, $rst 75%, $rshs 75%, $rshs 80%, $cclr 80%, $cclr 100%) 2 stretch;
        color: $color-school-rsd-dark;
    }
    @if $school==rse {
        $start: 100px;
        $end: 20px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr 50%, $rsd 50%, $rsd 55%, $rsjs 55%, $rsjs 60%, $rsb 60%, $rsb 65%, $rsn 65%, $rsn 70%, $rst 70%, $rst 75%, $rshs 75%, $rshs 80%, $cclr 80%, $cclr 100%) 2 stretch;
        color: $rse;
    }
    @if $school==rshs {
        $start: 100px;
        $end: 20px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr 50%, $rsd 50%, $rsd 55%, $rsjs 55%, $rsjs 60%, $rsb 60%, $rsb 65%, $rsn 65%, $rsn 70%, $rst 70%, $rst 75%, $rse 75%, $rse 80%, $cclr 80%, $cclr 100%) 2 stretch;
        color: $color-school-rshs--support--light;
    }
    @if $school==rsjs {
        $start: 100px;
        $end: 20px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr 50%, $rsd 50%, $rsd 55%, $rse 55%, $rse 60%, $rsb 60%, $rsb 65%, $rsn 65%, $rsn 70%, $rst 70%, $rst 75%, $rse 75%, $rse 80%, $cclr 80%, $cclr 100%) 2 stretch;
        color: $rsjs;
    }
    @if $school==rsn {
        $start: 100px;
        $end: 20px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr calc(5.0% + #{$start}), $rsd calc( 5.0% + #{$start}), $rsd calc(12.5% + #{$start}), $rsjs calc(12.5% + #{$start}), $rsjs calc(20.0% + #{$start}), $rsb calc(20.0% + #{$start}), $rsb calc(32.5% + #{$start}), $rse calc(32.5% + #{$start}), $rse calc(40.0% + #{$start}), $rst calc(40.0% + #{$start}), $rst calc(52.5% + #{$start}), $rshs calc(52.5% + #{$start}), $rshs calc(60.0% + #{$start}), $cclr calc(60.0% - #{$start} + #{$end}), $cclr 100%) 2 stretch;
        color: $rsn;
        @include breakpoint($small-wide) {
            border-image: linear-gradient(90deg, $cclr 0%, $cclr 50%, $rsd 50%, $rsd 55%, $rsjs 55%, $rsjs 60%, $rsb 60%, $rsb 65%, $rse 65%, $rse 70%, $rst 70%, $rst 75%, $rshs 75%, $rshs 80%, $cclr 80%, $cclr 100%) 2 stretch;
        }
    }
    @if $school==rst {
        $start: 100px;
        $end: 20px;
        $cclr: currentColor;
        border-color: $cclr;
        border-image: linear-gradient(90deg, $cclr 0%, $cclr 50%, $rsd 50%, $rsd 55%, $rsjs 55%, $rsjs 60%, $rsb 60%, $rsb 65%, $rsn 65%, $rsn 70%, $rshs 70%, $rshs 75%, $rse 75%, $rse 80%, $cclr 80%, $cclr 100%) 2 stretch;
        color: $rst;
    }
}

$ras-color1: $color-ras-green--light;
$ras-color2: $color-ras-green--light;
$ras-color2Percentage: 45%;
$rsb-color1: $color-school-rsb-light;
$rsb-color2: $color-school-rsb-dark;
$rsb-color2Percentage: 0;
$rsd-color1: $color-school-rsd-dark;
$rsd-color2: $color-school-rsd;
$rsd-color2Percentage: 0;
$rse-color1: $color-school-rse-dark;
$rse-color2: $color-school-rse;
$rse-color2Percentage: 25%;
$rshs-color1: $color-school-rshs--support--light;
$rshs-color2: $color-school-rshs--primary;
$rshs-color2Percentage: 25%;
$rsjs-color1: $color-school-rsjs-dark;
$rsjs-color2: $color-school-rsjs;
$rsjs-color2Percentage: 25%;
$rsn-color1: $color-school-rsn--primary;
$rsn-color2: $color-school-rsn--support--light;
$rsn-color2Percentage: 25%;
$rst-color1: $color-white;
$rst-color2: $color-school-rst-dark;
$rst-color2Percentage: 0;
@mixin l-line($color1: $ras-color1, $color2: $ras-color2, $color2Percentage: $ras-color2Percentage) {
    $schools: ras $ras-color1 $ras-color2 $ras-color2Percentage, rsb $rsb-color1 $rsb-color2 $rsb-color2Percentage, rsd $rsd-color1 $rsd-color2 $rsd-color2Percentage, rse $rse-color1 $rse-color2 $rse-color2Percentage, rshs $rshs-color1 $rshs-color2 $rshs-color2Percentage, rsjs $rsjs-color1 $rsjs-color2 $rsjs-color2Percentage, rsn $rsn-color1 $rsn-color2 $rsn-color2Percentage, rst $rst-color1 $rst-color2 $rst-color2Percentage;
    @each $school, $color1, $color2, $color2Percentage in $schools {
        @at-root #{&}--#{$school} {
            background-color: $color1;
            &::before {
                border-left: 1px solid $color1;
                border-right: 3px solid lighten($color2, $color2Percentage);
            }
            &::after {
                border-left: 3px solid lighten($color2, $color2Percentage);
                border-right: 1px solid $color1;
            }
        }
    }
}

// category card panels, home portfolio card panels
@mixin multi-panels {
    $panels: two $small-wide 6.2%, three $small-wide 6.2%, three $medium-wide 4.1333%, four $small-wide 6.2%, four $medium-wide 4.1333%, four $tp-huge 3.1%, five $small-wide 6.2%, five $medium-wide 4.1333%, five $tp-huge 3.099%, five $tp-ridiculously-wide 2.48%, six $small-wide 6.2%, six $medium-wide 4.1333%, six $tp-xlarge 3.1%, six $tp-ginormous 2.48%, six $tp-ridiculously-wide 2.0667%;
    // 1600bp, 6columns
    @each $panel, $breakpoint, $percent in $panels {
        &.multi-panels-#{$panel} {
            .multi-panels-card {
                @include breakpoint(#{$breakpoint}) {
                    // #{$breakpoint}, #{$panel} panels
                    // Calling span() doesn't work inside @each mixin...
                    $percent: $percent * 8.0645;
                    // Normally 1/12th of 100% would be 8.333%
                    float: left;
                    width: #{$percent};
                }
            }
        }
    }
}

// category card panels, home portfolio card panels
@mixin multi-panels--new {
    $panels: two $small-wide 6.2%, three $small-wide 6.2%, three $medium-wide 4.1333%, four $small-wide 6.2%, four $medium-wide 4.1333%, four $tp-huge 3.1%, five $small-wide 6.2%, five $medium-wide 4.1333%, five $tp-huge 3.099%, five $tp-ridiculously-wide 2.48%, six $small-wide 6.2%, six $medium-wide 4.1333%, six $tp-xlarge 3.1%, six $tp-ginormous 2.48%, six $tp-ridiculously-wide 2.0667%;
    // 1600bp, 6columns
    @each $panel, $breakpoint, $percent in $panels {
        &.multi-panels--#{$panel} {
            .multi-panels__card {
                @include breakpoint(#{$breakpoint}) {
                    // #{$breakpoint}, #{$panel} panels
                    // Calling span() doesn't work inside @each mixin...
                    $percent: $percent * 8.0645;
                    // Normally 1/12th of 100% would be 8.333%
                    float: left;
                    width: #{$percent};
                }
            }
        }
    }
}

// highlight current page
@mixin page-highlight {
    %page-highlight {
        background: $color-ras-green--dark;
        color: $color-white;
        &:hover {
            color: $color-white;
        }
        @include breakpoint($medium-wide) {
            background: transparent;
            color: darken($color-ras-green--light, 4);
            &:hover {
                color: darken($color-ras-green--light, 4);
            }
            &:hover::after {
                background: currentColor;
            }
        }
        &::after {
            @include breakpoint($medium-wide) {
                background: currentColor;
                content: '';
                display: block;
                height: 4px;
                left: 10%;
                position: absolute;
                top: calc(67.5% + 2px);
                width: 80%;
            }
        }
    }
    $pages: home 1, lpn 2, rn 3, bsn 4, rntobsn 5, msn 6;
    @each $page, $place in $pages {
        &.page-#{$page} .global-nav-list-tier1:nth-child(#{$place}) a {
            @extend %page-highlight;
        }
    }
}

// program card panels
@mixin program-panels {
    $panels: two $small-wide 6.1%, three $small-wide 6.1%, three $medium-tall 4.1333%, four $small-wide 6.1%, four $medium-tall 3.1%, five $small-wide 6.1%, five $medium-tall 4.1333%, five $tp-xlarge 2.48%, six $small-wide 6.1%, six $medium-tall 4.1333%, six $tp-xlarge 2.48%;
    // six   $tp-xlarge   2.0667%; // If CTA Panel is Visible to total 6 panels
    @each $panel, $breakpoint, $percent in $panels {
        &.program-panels-#{$panel}, &.program-panels--#{$panel} {
            .program-panels-card, .program-panels__card {
                @include breakpoint(#{$breakpoint}) {
                    // #{$breakpoint}, #{$panel} panels
                    // Calling span() doesn't work inside @each mixin...
                    // @include span(#{$percent} of 12 no-gutters);
                    $percent: $percent * 8.0645;
                    // Normally 1/12th of 100% would be 8.333%
                    float: left;
                    width: #{$percent};
                }
            }
        }
    }
}

// primary CTA button styles
@mixin ras-buttons($palette: ras) {
    @if $palette==ras {
        $foreground-color: rgba($color-ras-green--light, 0.66);
        $background-color: $color-ras-green--dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==alt {
        $foreground-color: rgba($color-ras-green--dark, 0.66);
        $background-color: $color-black;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==rsb {
        $foreground-color: rgba($color-school-rsb, 0.66);
        $background-color: $color-school-rsb-dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==rsd {
        $foreground-color: $color-school-rsd;
        $background-color: $color-school-rsd-dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==rse {
        $foreground-color: rgba($color-school-rse, 0.66);
        $background-color: $color-school-rse-dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==rshs {
        $foreground-color: rgba($color-school-rshs--support--light, 0.66);
        $background-color: $color-school-rshs--support--dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==rsjs {
        $foreground-color: rgba($color-school-rsjs, 0.66);
        $background-color: $color-school-rsjs-dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==rsn {
        $foreground-color: rgba($color-school-rsn--primary, 0.66);
        $background-color: $color-school-rsn--support--dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
    @if $palette==rst {
        $foreground-color: rgba($color-school-rst, 0.66);
        $background-color: $color-school-rst-dark;
        background-color: $foreground-color;
        background: linear-gradient(to right, $foreground-color 0%, $foreground-color 100%) $background-color;
        background-color: #{$background-color}\9;
        // IE 8 and Below Hack
        background: #{$background-color}\9;
        // IE 9 and Below Hack
        color: $background-color;
    }
}

// RULE STRIP COLORS
//$ras-bg: $color-ras-green--light;
//$ras-slash: $color-ras-green--dark;
//$rsb-bg: $color-school-rsb;
//$rsb-slash: $color-school-rsb-dark;
//$rsd-bg: $color-school-rsd;
//$rsd-slash: $color-school-rsd-dark;
//$rse-bg: $color-school-rse;
//$rse-slash: $color-school-rse-dark;
//$rshs-bg: $color-school-rshs--primary;
//$rshs-slash: $color-school-rshs--support--dark;
//$rsjs-bg: $color-school-rsjs;
//$rsjs-slash: $color-school-rsjs-dark;
//$rsn-bg: $color-school-rsn--support--light;
//$rsn-slash: $color-school-rsn--support--dark;
//$rst-bg: $color-school-rst;
//$rst-slash: $color-school-rst-dark;
//@mixin rule-stripe($bg: $ras-bg, $slash: $ras-slash) {
//    $schools:
//        ras $ras-bg $ras-slash,
//        rsb $rsb-bg $rsb-slash,
//        rsd $rsd-bg $rsd-slash,
//        rse $rse-bg $rse-slash,
//        rshs $rshs-bg $rshs-slash,
//        rsjs $rsjs-bg $rsjs-slash,
//        rsn $rsn-bg $rsn-slash,
//        rst $rst-bg $rst-slash;
//    @each $school, $bg,$slash in $schools {
//        @at-root #{&}--#{$school} {
//            display: none;
//            .glance__cta & {
//                background-color: rgba($bg, .85);
//                border: 0;
//                display: block;
//                height: 14px;
//                opacity: 1;
//                position: relative;
//                &::after {
//                    background-color: rgba($slash, .25);
//                    content: '';
//                    display: block;
//                    left: 70%;
//                    height: 100%;
//                    position: absolute;
//                    transform: skew(-12deg, 0);
//                    width: 5%;
//                }
//            }
//            @include breakpoint($medium-wide) {
//                background-color: rgba($bg, .85);
//                border: 0;
//                display: block;
//                height: 14px;
//                opacity: 1;
//                position: relative;
//                &::after {
//                    background-color: rgba($slash, .25);
//                    content: '';
//                    display: block;
//                    left: 70%;
//                    height: 100%;
//                    position: absolute;
//                    transform: skew(-12deg, 0);
//                    width: 5%;
//                }
//            }
//        }
//    }
//}
@mixin rule-line--shared {
    border-bottom: 0;
    border-top: 1px solid;
    clear: both;
    display: inline-block;
    height: 1px;
    width: 100%;
}

@mixin rule-line($bgcolor: $rule-line--default, $color: $rule-line--default, $margin: 20px 0) {
    @include rule-line--shared;
    background-color: $bgcolor;
    color: $color;
    margin: $margin;
}

@mixin rule-stripe {
    border: 0;
    bottom: 0;
    clear: both;
    display: block;
    height: 14px;
    margin: 0 auto;
    opacity: 0;
    position: relative;
    width: 100%;
    &::after {
        @include transform(skew(-12deg, 0));
        background-color: currentColor;
        content: '';
        display: block;
        height: 100%;
        left: 70%;
        opacity: .5;
        position: absolute;
        width: 5%;
    }
    @include breakpoint($medium-wide) {
        opacity: 1;
    }
}

@mixin rule-stripe--overlay($bgcolor: $color-white, $bg-alpha: 0.375, $color: $color-black, $color-alpha: 0.375, $blend-mode: overlay, $opacity: 0) {
    background-color: rgba($bgcolor, $bg-alpha);
    border: 0;
    bottom: 0;
    clear: both;
    color: rgba($color, $color-alpha);
    display: block;
    height: 14px;
    margin: 0 auto;
    mix-blend-mode: $blend-mode;
    opacity: $opacity;
    position: relative;
    width: 100%;
    &::after {
        @include transform(skew(-12deg, 0));
        background-color: currentColor;
        content: '';
        display: block;
        height: 100%;
        left: 70%;
        opacity: .5;
        position: absolute;
        width: 5%;
    }
}

@mixin rule-stripe--vertical($bg-default: $color-ras-green--light, $color-default: $color-ras-green--dark, $bg-alpha: 0.375, $color-alpha: 0.375) {
    background-color: $bg-default;
    clear: both;
    color: $color-default;
    display: block;
    height: 100%;
    left: 0;
    margin: 0;
    opacity: 1;
    overflow: hidden;
    position: absolute;
    top: 0;
    width: 5px;
    &::after {
        @include transform(rotate(45deg));
        background-color: currentColor;
        content: '';
        display: block;
        height: 20px;
        left: -5px;
        opacity: 1;
        position: absolute;
        top: 50%;
        width: 10px;
    }
}

// repeating stripe background
@mixin stripe-background($color1, $color2, $deg: -45deg, $size1: 1px, $size2: 0, $size3: 10px) {
    background: repeating-linear-gradient($deg, $color1, $color1 $size1, $color2 $size2, $color2 $size3);
}

// text-shadow
@mixin text-shadow($horizOffset, $vertOffset, $blur, $color) {
    text-shadow: $horizOffset $vertOffset $blur $color;
}

@mixin transform($transforms) {
    transform: $transforms;
}

@mixin transition($args...) {
    transition: $args;
}

@mixin value-prop($c1: $color-ras-gold--dark, $c2: $color-ras-green--light, $c3: $color-ras-green--dark, $bgimg-first: null, $bgpos-first: null, $bgsize-first: null, $bgimg-last: null, $bgpos-last: null, $bgsize-last: null) {
    background: $c2;
    color: $c3;
    .value-prop-card, .value-prop__card {
        &:first-child {
            @if $bgimg-first==null {
                background-color: inherit;
            }
            @else {
                background: inherit url("#{$bgimg-first}") no-repeat $bgpos-first (scroll / $bgsize-first);
            }
        }
        &:last-child {
            @if $bgimg-last==null {
                background-color: transparent;
            }
            @else {
                background: transparent url("#{$bgimg-last}") no-repeat $bgpos-last (scroll / $bgsize-last);
            }
        }
        &:last-child:only-child {
            background: $color-ras-green--dark;
        }
    }
}

// vertical padding, top/bottom
@mixin margin-axis-y($margin-top, $margin-bottom) {
    margin-bottom: $margin-bottom;
    margin-top: $margin-top;
}

@mixin padding-axis-y($padding-top, $padding-bottom) {
    padding-bottom: $padding-bottom;
    padding-top: $padding-top;
}

@mixin y-axis-margin($margin-top, $margin-bottom) {
    margin-bottom: $margin-bottom;
    margin-top: $margin-top;
}

@mixin y-axis-padding($padding-top, $padding-bottom) {
    padding-bottom: $padding-bottom;
    padding-top: $padding-top;
}